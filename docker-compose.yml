services:
  vo_bot_db:
    container_name: vo_bot_db
    image: postgres:14.3-alpine
    restart: unless-stopped
    networks:
      - db_network
    volumes:
      - ./vo_bot_db:/var/lib/postgresql/data
    env_file:
      - .env

  appseed-app:
    container_name: vo_bot_api
    restart: always
    build:
      context: .
    networks:
      - db_network
      - web_network
    volumes:
      - ./apps:/app/apps
      - ./templates:/app/templates
      - ./media:/app/media
      - ./logs:/app/logs
    command: ["python", "/app/manage.py", "runserver", "0:5005"]

  nginx:
    container_name: nginx
    restart: always
    image: "nginx:latest"
    ports:
      - "127.0.0.1:5085:5085"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    networks:
      - web_network
    depends_on:
      - appseed-app

  redis:
    image: redis:7.0.12
    container_name: vo_bot_redis
    command: ["redis-server", "--port", "6379", "--slave-read-only", "no"]
    restart: always
    ports:
      - 6379:6379
    networks:
      - db_network

  # celery:
  #   container_name: vo_bot_celery
  #   restart: always
  #   build:
  #     context: .
  #   networks:
  #     - db_network
  #   environment:
  #     DJANGO_SETTINGS_MODULE: "core.settings"
  #   command: "celery -A home worker -l info -B"
  #   depends_on:
  #     - appseed-app

networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge
